// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Users {
  id Int @id @default(autoincrement()) @map("id")
  nickname String @unique @map("nickname")
  password String @map("password")
  authorization String @map("authorization")

  Orders Orders[]

  @@map("Users")
}

model Categories {
  id Int @id @default(autoincrement()) @map("id")
  name String @unique @map("name")
  order Int @map("order")

  Menu Menu[]

  @@map("Categories")
}

model Menu {
  id Int @id @default(autoincrement()) @map("id")
  CategoryId Int @map("CategoryId")
  name String @unique @map("name")
  description String @map("description") @db.Text
  image String @map("image")
  price Int @map("price")
  order Int @map("order")
  status String @map("status")

  Category Categories @relation(fields: [CategoryId], references: [id], onDelete: Cascade)
  Orders Orders[]

  @@map("Menu")
}

model Orders {
  id Int @id @default(autoincrement()) @map("id")
  UserId Int @map("UserId")
  MenuId Int @map("MenuId")

  quantity Int @map("quantity")
  status String @map("status")
  createdAt DateTime @default(now()) @map("createdAt")
  totalPrice Int @map("totalPrice")

  User Users @relation(fields: [UserId], references: [id], onDelete: Cascade)
  Menu Menu @relation(fields: [MenuId], references: [id], onDelete: Cascade)

  @@map("Orders")
}